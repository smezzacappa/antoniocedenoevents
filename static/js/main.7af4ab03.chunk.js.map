{"version":3,"sources":["images/Calibr.png","images/snow.png","images/subzero.jpg","images/acevents.jpeg","components/Logo.js","components/Navigation.js","components/Layout.js","components/ACEvents.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Logo","Image","src","Calibr","className","jsx","Component","sectionStyle","backgroundImage","Snow","Navigation","Navbar","expand","style","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","Layout","Subzero","EventsLogo","ACEvents","Footer","bg","App","fixed","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,0PCiC5BC,E,iLA1BP,OACI,6BACI,kBAACC,EAAA,EAAD,CAAOC,IAAKC,IAAQC,UAAU,WAE9B,2BAAOC,KAAG,GAAV,ypB,GANGC,a,QCAfC,EAAe,CACjBC,gBAAgB,OAAD,O,OAASC,EAAT,MAkDFC,E,iLA7CP,OACE,6BACV,kBAACC,EAAA,EAAD,CAAQC,OAAO,KAAKC,MAAON,GACzB,kBAACI,EAAA,EAAOG,MAAR,CAAcC,KAAK,KAEf,kBAAC,EAAD,OAGJ,kBAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKhB,UAAU,WACb,kBAACgB,EAAA,EAAIC,KAAL,CAAUN,KAAK,KAAf,QACA,kBAACK,EAAA,EAAIC,KAAL,CAAUN,KAAK,KAAf,cAIE,2BAAOV,KAAG,GAAV,0kB,GAlBiBC,a,iBCgBVgB,E,iLAnBP,OACI,yBAAKlB,UAAU,UACX,kBAACH,EAAA,EAAD,CAAOC,IAAKqB,IAASnB,UAAU,UAC/B,2BAAOC,KAAG,GAAV,uO,GALKC,a,iBCyBNkB,E,iLAtBP,OACI,6BACI,kBAACvB,EAAA,EAAD,CAAOC,IAAKuB,IAAUrB,UAAU,aAEhC,2BAAOC,KAAG,GAAV,uZ,GANSC,aC6BVoB,E,iLA5BP,OACE,6BACN,kBAACf,EAAA,EAAD,CAAQgB,GAAG,OAAOf,OAAO,MAE3B,kBAACD,EAAA,EAAOG,MAAR,CAAcC,KAAK,IAAIX,UAAU,UAAUe,GAAG,MAC1C,kBAAC,EAAD,QAGE,2BAAOd,KAAG,GAAV,oV,GAVaC,aCcNsB,MAVf,WACE,OACE,yBAAKxB,UAAU,OACb,kBAAC,EAAD,MACE,kBAAC,EAAD,MACE,kBAAC,EAAD,CAAQyB,MAAM,aCDJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.7af4ab03.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Calibr.74d2cf74.png\";","module.exports = __webpack_public_path__ + \"static/media/snow.c209c559.png\";","module.exports = __webpack_public_path__ + \"static/media/subzero.c5de1608.jpg\";","module.exports = __webpack_public_path__ + \"static/media/acevents.bcad1da7.jpeg\";","import React, {Component} from 'react'\nimport Image from 'react-bootstrap/Image'\nimport Calibr from '../images/Calibr.png'\n\n\nclass Logo extends Component {\n    render(){\n        return(\n            <div>\n                <Image src={Calibr} className=\"Calibr\"/> \n\n                <style jsx>{`\n                div{\n                    margin-left: 0% !important;\n                }\n                    .Calibr {\n                            padding: 1%;\n                            width: 50%;\n                            color-overlay: black;\n                            box-shadow: black 1px 0px 6px 3px;\n                            background-color: black;\n                            // text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;\n                            // height: 70%;\n                            // box-shadow: 2px 2px 2px #ffffff\n                            }\n                            `}\n</style>\n            </div>\n           \n        )\n    }\n}\n \nexport default Logo;","import React, {Component} from 'react'\nimport {Nav, Navbar } from 'react-bootstrap'\nimport Logo from './Logo'\nimport Snow from '../images/snow.png'\n\nvar sectionStyle = {\n  backgroundImage: `url(${Snow})`\n}\n\nclass Navigation extends Component {\n    render(){\n        return(\n          <div>\n<Navbar expand=\"lg\" style={sectionStyle}>\n  <Navbar.Brand href=\"/\">\n    \n      <Logo/>\n    \n  </Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n  <Navbar.Collapse id=\"basic-navbar-nav\">\n    <Nav className=\"ml-auto\">\n      <Nav.Link href=\"/\">Home</Nav.Link>\n      <Nav.Link href=\"/\">Tickets</Nav.Link>\n      </Nav>\n  </Navbar.Collapse>\n</Navbar>\n        <style jsx>{`\n        nav{\n          background\n        }\n          .ml-auto{\n            margin-right: 10%;\n          } \n          .nav-link{\n            font-size: 160%;\n            color: white !important;\n            background-color: black;\n            margin-right: 10%;\n            padding: 0px;\n            box-shadow: black 1px 0px 6px 3px;\n            border-radius: 10%;\n          }\n          Logo{\n            margin-left:-10%\n            \n          }\n          //  #basic-navbar-nav{\n          //   box-shadow: black 4px 3px 3px;\n          //  }\n        `}</style>\n        </div>\n        )\n    }\n}\n\nexport default Navigation;","import React, {Component} from 'react'\nimport Image from 'react-bootstrap/Image'\nimport Subzero from '../images/subzero.jpg'\n\nclass Layout extends Component {\n    render(){\n        return(\n            <div className=\"Layout\">\n                <Image src={Subzero} className=\"flyer\"/>\n                <style jsx>{`\n                .Layout{\n                height: 100%;\n               \n                }\n                .flyer{\n                    margin: 10%;\n                    width: 40%;\n                }\n                `}\n                </style>\n            </div>\n        )\n    }\n}\n\nexport default Layout;","import React, {Component} from 'react'\nimport Image from 'react-bootstrap/Image'\nimport ACEvents from '../images/acevents.jpeg'\n\n\nclass EventsLogo extends Component {\n    render(){\n        return(\n            <div>\n                <Image src={ACEvents} className='ACEvents' /> \n\n                <style jsx>{`\n                div{\n                    margin-left: 0% !important;\n                }\n                    .ACEvents {\n                            padding: 0% !important;\n                            width: 20% !important;\n                            // height: 70%;\n                            // box-shadow: 2px 2px 2px #ffffff\n                            }\n                            `}\n</style>\n            </div>\n           \n        )\n    }\n}\n \nexport default EventsLogo;","import React, {Component} from 'react'\nimport {Nav, Navbar } from 'react-bootstrap'\nimport EventsLogo from './ACEvents'\n\nclass Footer extends Component {\n    render(){\n        return(\n          <div>\n    <Navbar bg=\"dark\" expand=\"lg\">\n  {/* Make favicons as icons at bottom */} \n  <Navbar.Brand href=\"/\" className='ml-auto' id='AC'>\n      <EventsLogo/>\n  </Navbar.Brand>\n</Navbar>\n        <style jsx>{`\n          .ml-auto{\n            margin-right: 10%;\n          } \n          #AC{\n              margin-right:-10% !important;\n          }\n          .nav-link{\n            font-size: 160%;\n            // color: #ffffff !important;\n            margin-right: 10%;\n            padding: 0px;\n           \n          }\n        `}</style>\n        </div>\n        )\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navigation from './components/Navigation'\n// import Logo from './components/Logo'\nimport Layout from './components/Layout'\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navigation/>\n        <Layout/>\n          <Footer fixed=\"bottom\" />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}